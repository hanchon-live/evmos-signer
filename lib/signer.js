const e=require("secp256k1-native");function t(e){const t=[];let c;for(c=0;c<Math.ceil(e.byteLength/2);c++)t.push(e[c]),e[c]=e[e.length-1-c];const n=c;for(;c<e.byteLength;c++)e[c]=t[2*n-c-1];return e}exports.signEthSecp256k1=function(c,n){if(c.byteLength!==e.secp256k1_SECKEYBYTES)return null;const s=e.secp256k1_context_create(e.secp256k1_context_SIGN),r=Buffer.alloc(e.secp256k1_ecdsa_recoverable_SIGBYTES);return e.secp256k1_ecdsa_sign_recoverable(s,r,n,c),t(r.slice(0,32)),t(r.slice(32,64)),r};
//# sourceMappingURL=signer.js.map
